generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String             @id @default(uuid())
  username         String
  email            String             @unique
  password         String
  templateName     String?            @unique
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  AbstractTemplate AbstractTemplate[]
  MenuItems        MenuItems[]
  ServicesData     ServicesData[]
  Footer           Footer[]
}

model AbstractTemplate {
  id             String         @id @default(uuid())
  templateName   String         @unique
  metaTitle      String
  headerTitle    String
  heroTitle      String
  outlineBtnText String
  fillBtnText    String
  userId         String         @unique
  user           User           @relation(fields: [userId], references: [id])
  menu           MenuItems[]
  ServicesData   ServicesData[]
  Footer         Footer[]
  FooterOption   FooterOption[]
}

model MenuItems {
  id               String            @id @default(uuid())
  title            String            @default("Home")
  url              String            @default("/")
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  user             User              @relation(fields: [userId], references: [id])
  AbstractTemplate AbstractTemplate? @relation(fields: [templateId], references: [id])
  templateId       String
  userId           String
}

model ServicesData {
  id               String           @id @default(uuid())
  imageUrl         String
  title            String
  description      String
  btnText          String
  templateId       String
  userId           String
  user             User             @relation(fields: [userId], references: [id])
  AbstractTemplate AbstractTemplate @relation(fields: [templateId], references: [id])
}

model Footer {
  id         String           @id @default(uuid())
  title      String
  templateId String
  userId     String
  user       User             @relation(fields: [userId], references: [id])
  theme      AbstractTemplate @relation(fields: [templateId], references: [id])
  options    FooterOption[]
}

model FooterOption {
  id         String           @id @default(uuid())
  label      String
  link       String
  theme      AbstractTemplate @relation(fields: [templateId], references: [id])
  Footer     Footer?          @relation(fields: [footerId], references: [id])
  footerId   String
  templateId String
}
